name: CI

on: [push, pull_request]

jobs:
  linux-build:
    name: Linux CI
    strategy:
      matrix:
        image:
          - "ubuntu:20.04"
          - "ubuntu:22.04"
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
      env:
        DEBIAN_FRONTEND: noninteractive
    steps:
      - name: Install dependencies
        run: |
          apt-get update -qq
          apt-get install -y \
            build-essential \
            cmake \
            libboost-program-options-dev \
            libcodec2-dev \
            libgl-dev \
            libgtest-dev \
            libxcursor-dev \
            libxi-dev \
            libxinerama-dev \
            libxrandr-dev \
            --no-install-recommends
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure
        run: |
          mkdir build
          cd build
          cmake ..
      - name: Compile
        working-directory: build
        run: make -j4
      - name: Test
        working-directory: build
        run: make test
      - name: Install
        working-directory: build
        run: make install
  windows-build:
    name: Windows CI
    runs-on: "windows-2019"
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          auto-activate-base: true
          activate-environment: ""
          channels: conda-forge
      - name: Setup Conda Env
        run: |
          conda info && conda list
          conda create -n M17 vs2019_win-64 cmake ninja pkg-config boost-cpp gtest gmock gtest libcodec2
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install MSVC on Windows
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
      - name: Configure
        run: |
          mkdir build
          cd build
          conda activate M17
          cmake -G "Ninja" -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX:PATH="%LIBRARY_PREFIX%" -DCMAKE_PREFIX_PATH:PATH="%LIBRARY_PREFIX%" ..
      - name: Compile
        working-directory: build
        run: cmake --build . --config Release --
      - name: Zip Artifacts
        working-directory: build
        uses: vimtor/action-zip@v1
        with:
          files: m17-mod.exe m17-demod.exe m17-gateway-link_mod.exe m17-gateway_link_demod.exe
          dest: M17-Tools-Win-x64.zip
      - name: Upload Artifact
        working-directory: build
        uses: actions/upload-artifact@v3
        with:
          name: M17-Tools-Win-x64
          path: M17-Tools-Win-x64.zip
      - name: Test
        working-directory: build
        run: ctest --build-config Release --output-on-failure --timeout 120 -j3